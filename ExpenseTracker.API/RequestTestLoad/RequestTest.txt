//put request

{
"Id":18,
"userid":"https://expensetracker/embedded_1",
"title":"New ExpenseGroup Modified 18",
"description":"ExpenseGroup description",
"expensegroupstatusID":1
}

//post request

In req header
Content-type: application/json


{
"userid":"https://expensetracker/embedded_1",
"title":"New ExpenseGroup Modified 18",
"description":"ExpenseGroup description",
"expensegroupstatusID":1
}

//patch request
install-package marvin.jsonpatch
Content-Type:application/json-patch+json

[
{"op":"replace","path":"/title","value":"New Title"},
{"op":"copy","from":"/title","path":"/description"}
]
//for dynamic sorting
//install-package system.linq.dynamic
//sort query string
//http://localhost/api/expensegroups?sort=-expensegroupstatusid,title
//sort and filter
//http://localhost/api/expensegroups?status=open&sort=title

//using expando object we can specify the exact fields which gets listed in the json
  //http://localhost/api/expensegroups/1/expenses?fields=id,description
  //get all expenses
  //http://localhost/api/expensegroups?fields=id,title,expenses.id
  //get id from the expenses
  //http://localhost/api/expensegroups?fields=id,title,expenses.id
  //to implement caching by using etag
  --install-package Cachecow.Server
  //config.MessageHandlers.Add(new CacheCow.Server.CachingHandler(config))

  //then in headers in request add the below line

  //If-None-Match:ETag:add the etag which you got during the initial get

  //to enable cross origin request CORS
  //install-package microsoft.aspnet.webapi.cors
  // [EnableCors("*","*","*")] --origin,headers,methods allowed

  //to enable consuming web api from mvc or windows client
  //install-package microsoft.net.http

  //paged list mvc
  //install-package pagedlist.mvc